<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.didi.datainfra.jms.dao.TaskDOMapper">
  <resultMap id="BaseResultMap" type="com.didi.datainfra.jms.domain.entity.TaskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="demand_side" jdbcType="VARCHAR" property="demandSide" />
    <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="task_period_type" jdbcType="TINYINT" property="taskPeriodType" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="app_path" jdbcType="VARCHAR" property="appPath" />
    <result column="common_app_path" jdbcType="VARCHAR" property="commonAppPath" />
    <result column="main_clazz" jdbcType="VARCHAR" property="mainClazz" />
    <result column="process_no" jdbcType="INTEGER" property="processNo" />
    <result column="cpu_no" jdbcType="INTEGER" property="cpuNo" />
    <result column="memory" jdbcType="INTEGER" property="memory" />
    <result column="elapsed_time" jdbcType="INTEGER" property="elapsedTime" />
    <result column="input_timeout" jdbcType="INTEGER" property="inputTimeout" />
    <result column="output_timeout" jdbcType="INTEGER" property="outputTimeout" />
    <result column="output_offset" jdbcType="INTEGER" property="outputOffset" />
    <result column="begin_time_offset" jdbcType="INTEGER" property="beginTimeOffset" />
    <result column="check_type" jdbcType="TINYINT" property="checkType" />
    <result column="mode" jdbcType="TINYINT" property="mode" />
    <result column="yarn_queue_name" jdbcType="VARCHAR" property="yarnQueueName" />
    <result column="hadoop_account" jdbcType="VARCHAR" property="hadoopAccount" />
    <result column="retry_times" jdbcType="TINYINT" property="retryTimes" />
    <result column="only_alert_owner" jdbcType="TINYINT" property="onlyAlertOwner" />
    <result column="use_default_alert" jdbcType="TINYINT" property="useDefaultAlert" />
    <result column="use_phone_alert" jdbcType="TINYINT" property="usePhoneAlert" />
    <result column="use_sms_alert" jdbcType="TINYINT" property="useSmsAlert" />
    <result column="use_mail_alert" jdbcType="TINYINT" property="useMailAlert" />
    <result column="alert_mails" jdbcType="VARCHAR" property="alertMails" />
    <result column="alert_phones" jdbcType="VARCHAR" property="alertPhones" />
    <result column="alert_sms_phones" jdbcType="VARCHAR" property="alertSmsPhones" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="product_line" jdbcType="VARCHAR" property="productLine" />
    <result column="dw_level" jdbcType="VARCHAR" property="dwLevel" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="mode_time" jdbcType="TIMESTAMP" property="modeTime" />
    <result column="task_exe_type" jdbcType="VARCHAR" property="taskExeType" />
    <result column="cascade" jdbcType="BIT" property="cascade" />
    <result column="input_paths" jdbcType="LONGVARCHAR" property="inputPaths" />
    <result column="output_paths" jdbcType="LONGVARCHAR" property="outputPaths" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from capri_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    insert into capri_task (id, code, name, 
      user_code, demand_side, project_code, 
      task_type, task_period_type, priority, 
      app_path, common_app_path, main_clazz, 
      process_no, cpu_no, memory, 
      elapsed_time, input_timeout, output_timeout, 
      output_offset, begin_time_offset, check_type, 
      mode, yarn_queue_name, hadoop_account, 
      retry_times, only_alert_owner, use_default_alert, 
      use_phone_alert, use_sms_alert, use_mail_alert, 
      alert_mails, alert_phones, alert_sms_phones, 
      delete_flag, delete_time, version, 
      create_time, update_time, product_line, 
      dw_level, tag, mode_time, 
      task_exe_type, cascade, input_paths, 
      output_paths, remark)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{demandSide,jdbcType=VARCHAR}, #{projectCode,jdbcType=VARCHAR}, 
      #{taskType,jdbcType=VARCHAR}, #{taskPeriodType,jdbcType=TINYINT}, #{priority,jdbcType=TINYINT}, 
      #{appPath,jdbcType=VARCHAR}, #{commonAppPath,jdbcType=VARCHAR}, #{mainClazz,jdbcType=VARCHAR}, 
      #{processNo,jdbcType=INTEGER}, #{cpuNo,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, 
      #{elapsedTime,jdbcType=INTEGER}, #{inputTimeout,jdbcType=INTEGER}, #{outputTimeout,jdbcType=INTEGER}, 
      #{outputOffset,jdbcType=INTEGER}, #{beginTimeOffset,jdbcType=INTEGER}, #{checkType,jdbcType=TINYINT}, 
      #{mode,jdbcType=TINYINT}, #{yarnQueueName,jdbcType=VARCHAR}, #{hadoopAccount,jdbcType=VARCHAR}, 
      #{retryTimes,jdbcType=TINYINT}, #{onlyAlertOwner,jdbcType=TINYINT}, #{useDefaultAlert,jdbcType=TINYINT}, 
      #{usePhoneAlert,jdbcType=TINYINT}, #{useSmsAlert,jdbcType=TINYINT}, #{useMailAlert,jdbcType=TINYINT}, 
      #{alertMails,jdbcType=VARCHAR}, #{alertPhones,jdbcType=VARCHAR}, #{alertSmsPhones,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=TINYINT}, #{deleteTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{productLine,jdbcType=VARCHAR}, 
      #{dwLevel,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, #{modeTime,jdbcType=TIMESTAMP}, 
      #{taskExeType,jdbcType=VARCHAR}, #{cascade,jdbcType=BIT}, #{inputPaths,jdbcType=LONGVARCHAR}, 
      #{outputPaths,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    update capri_task
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      demand_side = #{demandSide,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=VARCHAR},
      task_period_type = #{taskPeriodType,jdbcType=TINYINT},
      priority = #{priority,jdbcType=TINYINT},
      app_path = #{appPath,jdbcType=VARCHAR},
      common_app_path = #{commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{mainClazz,jdbcType=VARCHAR},
      process_no = #{processNo,jdbcType=INTEGER},
      cpu_no = #{cpuNo,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      input_timeout = #{inputTimeout,jdbcType=INTEGER},
      output_timeout = #{outputTimeout,jdbcType=INTEGER},
      output_offset = #{outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{beginTimeOffset,jdbcType=INTEGER},
      check_type = #{checkType,jdbcType=TINYINT},
      mode = #{mode,jdbcType=TINYINT},
      yarn_queue_name = #{yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{useMailAlert,jdbcType=TINYINT},
      alert_mails = #{alertMails,jdbcType=VARCHAR},
      alert_phones = #{alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      product_line = #{productLine,jdbcType=VARCHAR},
      dw_level = #{dwLevel,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      mode_time = #{modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{taskExeType,jdbcType=VARCHAR},
      cascade = #{cascade,jdbcType=BIT},
      input_paths = #{inputPaths,jdbcType=LONGVARCHAR},
      output_paths = #{outputPaths,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, code, name, user_code, demand_side, project_code, task_type, task_period_type, 
    priority, app_path, common_app_path, main_clazz, process_no, cpu_no, memory, elapsed_time, 
    input_timeout, output_timeout, output_offset, begin_time_offset, check_type, mode, 
    yarn_queue_name, hadoop_account, retry_times, only_alert_owner, use_default_alert, 
    use_phone_alert, use_sms_alert, use_mail_alert, alert_mails, alert_phones, alert_sms_phones, 
    delete_flag, delete_time, version, create_time, update_time, product_line, dw_level, 
    tag, mode_time, task_exe_type, cascade, input_paths, output_paths, remark
    from capri_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, name, user_code, demand_side, project_code, task_type, task_period_type, 
    priority, app_path, common_app_path, main_clazz, process_no, cpu_no, memory, elapsed_time, 
    input_timeout, output_timeout, output_offset, begin_time_offset, check_type, mode, 
    yarn_queue_name, hadoop_account, retry_times, only_alert_owner, use_default_alert, 
    use_phone_alert, use_sms_alert, use_mail_alert, alert_mails, alert_phones, alert_sms_phones, 
    delete_flag, delete_time, version, create_time, update_time, product_line, dw_level, 
    tag, mode_time, task_exe_type, cascade, input_paths, output_paths, remark
    from capri_task
  </select>
  <resultMap id="BaseResultMap" type="com.didi.datainfra.jms.domain.entity.TaskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="demand_side" jdbcType="VARCHAR" property="demandSide" />
    <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="task_period_type" jdbcType="TINYINT" property="taskPeriodType" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="app_path" jdbcType="VARCHAR" property="appPath" />
    <result column="common_app_path" jdbcType="VARCHAR" property="commonAppPath" />
    <result column="main_clazz" jdbcType="VARCHAR" property="mainClazz" />
    <result column="process_no" jdbcType="INTEGER" property="processNo" />
    <result column="cpu_no" jdbcType="INTEGER" property="cpuNo" />
    <result column="memory" jdbcType="INTEGER" property="memory" />
    <result column="elapsed_time" jdbcType="INTEGER" property="elapsedTime" />
    <result column="input_timeout" jdbcType="INTEGER" property="inputTimeout" />
    <result column="output_timeout" jdbcType="INTEGER" property="outputTimeout" />
    <result column="output_offset" jdbcType="INTEGER" property="outputOffset" />
    <result column="begin_time_offset" jdbcType="INTEGER" property="beginTimeOffset" />
    <result column="check_type" jdbcType="TINYINT" property="checkType" />
    <result column="mode" jdbcType="TINYINT" property="mode" />
    <result column="yarn_queue_name" jdbcType="VARCHAR" property="yarnQueueName" />
    <result column="hadoop_account" jdbcType="VARCHAR" property="hadoopAccount" />
    <result column="retry_times" jdbcType="TINYINT" property="retryTimes" />
    <result column="only_alert_owner" jdbcType="TINYINT" property="onlyAlertOwner" />
    <result column="use_default_alert" jdbcType="TINYINT" property="useDefaultAlert" />
    <result column="use_phone_alert" jdbcType="TINYINT" property="usePhoneAlert" />
    <result column="use_sms_alert" jdbcType="TINYINT" property="useSmsAlert" />
    <result column="use_mail_alert" jdbcType="TINYINT" property="useMailAlert" />
    <result column="alert_mails" jdbcType="VARCHAR" property="alertMails" />
    <result column="alert_phones" jdbcType="VARCHAR" property="alertPhones" />
    <result column="alert_sms_phones" jdbcType="VARCHAR" property="alertSmsPhones" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="product_line" jdbcType="VARCHAR" property="productLine" />
    <result column="dw_level" jdbcType="VARCHAR" property="dwLevel" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="mode_time" jdbcType="TIMESTAMP" property="modeTime" />
    <result column="task_exe_type" jdbcType="VARCHAR" property="taskExeType" />
    <result column="cascade" jdbcType="BIT" property="cascade" />
    <result column="input_paths" jdbcType="LONGVARCHAR" property="inputPaths" />
    <result column="output_paths" jdbcType="LONGVARCHAR" property="outputPaths" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from capri_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    insert into capri_task (id, code, name, 
      user_code, demand_side, project_code, 
      task_type, task_period_type, priority, 
      app_path, common_app_path, main_clazz, 
      process_no, cpu_no, memory, 
      elapsed_time, input_timeout, output_timeout, 
      output_offset, begin_time_offset, check_type, 
      mode, yarn_queue_name, hadoop_account, 
      retry_times, only_alert_owner, use_default_alert, 
      use_phone_alert, use_sms_alert, use_mail_alert, 
      alert_mails, alert_phones, alert_sms_phones, 
      delete_flag, delete_time, version, 
      create_time, update_time, product_line, 
      dw_level, tag, mode_time, 
      task_exe_type, cascade, input_paths, 
      output_paths, remark)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{demandSide,jdbcType=VARCHAR}, #{projectCode,jdbcType=VARCHAR}, 
      #{taskType,jdbcType=VARCHAR}, #{taskPeriodType,jdbcType=TINYINT}, #{priority,jdbcType=TINYINT}, 
      #{appPath,jdbcType=VARCHAR}, #{commonAppPath,jdbcType=VARCHAR}, #{mainClazz,jdbcType=VARCHAR}, 
      #{processNo,jdbcType=INTEGER}, #{cpuNo,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, 
      #{elapsedTime,jdbcType=INTEGER}, #{inputTimeout,jdbcType=INTEGER}, #{outputTimeout,jdbcType=INTEGER}, 
      #{outputOffset,jdbcType=INTEGER}, #{beginTimeOffset,jdbcType=INTEGER}, #{checkType,jdbcType=TINYINT}, 
      #{mode,jdbcType=TINYINT}, #{yarnQueueName,jdbcType=VARCHAR}, #{hadoopAccount,jdbcType=VARCHAR}, 
      #{retryTimes,jdbcType=TINYINT}, #{onlyAlertOwner,jdbcType=TINYINT}, #{useDefaultAlert,jdbcType=TINYINT}, 
      #{usePhoneAlert,jdbcType=TINYINT}, #{useSmsAlert,jdbcType=TINYINT}, #{useMailAlert,jdbcType=TINYINT}, 
      #{alertMails,jdbcType=VARCHAR}, #{alertPhones,jdbcType=VARCHAR}, #{alertSmsPhones,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=TINYINT}, #{deleteTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{productLine,jdbcType=VARCHAR}, 
      #{dwLevel,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, #{modeTime,jdbcType=TIMESTAMP}, 
      #{taskExeType,jdbcType=VARCHAR}, #{cascade,jdbcType=BIT}, #{inputPaths,jdbcType=LONGVARCHAR}, 
      #{outputPaths,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    update capri_task
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      demand_side = #{demandSide,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=VARCHAR},
      task_period_type = #{taskPeriodType,jdbcType=TINYINT},
      priority = #{priority,jdbcType=TINYINT},
      app_path = #{appPath,jdbcType=VARCHAR},
      common_app_path = #{commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{mainClazz,jdbcType=VARCHAR},
      process_no = #{processNo,jdbcType=INTEGER},
      cpu_no = #{cpuNo,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      input_timeout = #{inputTimeout,jdbcType=INTEGER},
      output_timeout = #{outputTimeout,jdbcType=INTEGER},
      output_offset = #{outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{beginTimeOffset,jdbcType=INTEGER},
      check_type = #{checkType,jdbcType=TINYINT},
      mode = #{mode,jdbcType=TINYINT},
      yarn_queue_name = #{yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{useMailAlert,jdbcType=TINYINT},
      alert_mails = #{alertMails,jdbcType=VARCHAR},
      alert_phones = #{alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      product_line = #{productLine,jdbcType=VARCHAR},
      dw_level = #{dwLevel,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      mode_time = #{modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{taskExeType,jdbcType=VARCHAR},
      cascade = #{cascade,jdbcType=BIT},
      input_paths = #{inputPaths,jdbcType=LONGVARCHAR},
      output_paths = #{outputPaths,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, code, name, user_code, demand_side, project_code, task_type, task_period_type, 
    priority, app_path, common_app_path, main_clazz, process_no, cpu_no, memory, elapsed_time, 
    input_timeout, output_timeout, output_offset, begin_time_offset, check_type, mode, 
    yarn_queue_name, hadoop_account, retry_times, only_alert_owner, use_default_alert, 
    use_phone_alert, use_sms_alert, use_mail_alert, alert_mails, alert_phones, alert_sms_phones, 
    delete_flag, delete_time, version, create_time, update_time, product_line, dw_level, 
    tag, mode_time, task_exe_type, cascade, input_paths, output_paths, remark
    from capri_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, name, user_code, demand_side, project_code, task_type, task_period_type, 
    priority, app_path, common_app_path, main_clazz, process_no, cpu_no, memory, elapsed_time, 
    input_timeout, output_timeout, output_offset, begin_time_offset, check_type, mode, 
    yarn_queue_name, hadoop_account, retry_times, only_alert_owner, use_default_alert, 
    use_phone_alert, use_sms_alert, use_mail_alert, alert_mails, alert_phones, alert_sms_phones, 
    delete_flag, delete_time, version, create_time, update_time, product_line, dw_level, 
    tag, mode_time, task_exe_type, cascade, input_paths, output_paths, remark
    from capri_task
  </select>
  <resultMap id="BaseResultMap" type="com.didi.datainfra.jms.domain.entity.TaskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="demand_side" jdbcType="VARCHAR" property="demandSide" />
    <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="task_period_type" jdbcType="TINYINT" property="taskPeriodType" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="app_path" jdbcType="VARCHAR" property="appPath" />
    <result column="common_app_path" jdbcType="VARCHAR" property="commonAppPath" />
    <result column="main_clazz" jdbcType="VARCHAR" property="mainClazz" />
    <result column="process_no" jdbcType="INTEGER" property="processNo" />
    <result column="cpu_no" jdbcType="INTEGER" property="cpuNo" />
    <result column="memory" jdbcType="INTEGER" property="memory" />
    <result column="elapsed_time" jdbcType="INTEGER" property="elapsedTime" />
    <result column="input_timeout" jdbcType="INTEGER" property="inputTimeout" />
    <result column="output_timeout" jdbcType="INTEGER" property="outputTimeout" />
    <result column="output_offset" jdbcType="INTEGER" property="outputOffset" />
    <result column="begin_time_offset" jdbcType="INTEGER" property="beginTimeOffset" />
    <result column="check_type" jdbcType="TINYINT" property="checkType" />
    <result column="mode" jdbcType="TINYINT" property="mode" />
    <result column="yarn_queue_name" jdbcType="VARCHAR" property="yarnQueueName" />
    <result column="hadoop_account" jdbcType="VARCHAR" property="hadoopAccount" />
    <result column="retry_times" jdbcType="TINYINT" property="retryTimes" />
    <result column="only_alert_owner" jdbcType="TINYINT" property="onlyAlertOwner" />
    <result column="use_default_alert" jdbcType="TINYINT" property="useDefaultAlert" />
    <result column="use_phone_alert" jdbcType="TINYINT" property="usePhoneAlert" />
    <result column="use_sms_alert" jdbcType="TINYINT" property="useSmsAlert" />
    <result column="use_mail_alert" jdbcType="TINYINT" property="useMailAlert" />
    <result column="alert_mails" jdbcType="VARCHAR" property="alertMails" />
    <result column="alert_phones" jdbcType="VARCHAR" property="alertPhones" />
    <result column="alert_sms_phones" jdbcType="VARCHAR" property="alertSmsPhones" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="product_line" jdbcType="VARCHAR" property="productLine" />
    <result column="dw_level" jdbcType="VARCHAR" property="dwLevel" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="mode_time" jdbcType="TIMESTAMP" property="modeTime" />
    <result column="task_exe_type" jdbcType="VARCHAR" property="taskExeType" />
    <result column="cascade" jdbcType="BIT" property="cascade" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.didi.datainfra.jms.domain.entity.TaskDO">
    <result column="input_paths" jdbcType="LONGVARCHAR" property="inputPaths" />
    <result column="output_paths" jdbcType="LONGVARCHAR" property="outputPaths" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, user_code, demand_side, project_code, task_type, task_period_type, 
    priority, app_path, common_app_path, main_clazz, process_no, cpu_no, memory, elapsed_time, 
    input_timeout, output_timeout, output_offset, begin_time_offset, check_type, mode, 
    yarn_queue_name, hadoop_account, retry_times, only_alert_owner, use_default_alert, 
    use_phone_alert, use_sms_alert, use_mail_alert, alert_mails, alert_phones, alert_sms_phones, 
    delete_flag, delete_time, version, create_time, update_time, product_line, dw_level, 
    tag, mode_time, task_exe_type, cascade
  </sql>
  <sql id="Blob_Column_List">
    input_paths, output_paths, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.didi.datainfra.jms.domain.entity.TaskDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from capri_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.didi.datainfra.jms.domain.entity.TaskDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from capri_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from capri_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from capri_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.didi.datainfra.jms.domain.entity.TaskDOExample">
    delete from capri_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    insert into capri_task (id, code, name, 
      user_code, demand_side, project_code, 
      task_type, task_period_type, priority, 
      app_path, common_app_path, main_clazz, 
      process_no, cpu_no, memory, 
      elapsed_time, input_timeout, output_timeout, 
      output_offset, begin_time_offset, check_type, 
      mode, yarn_queue_name, hadoop_account, 
      retry_times, only_alert_owner, use_default_alert, 
      use_phone_alert, use_sms_alert, use_mail_alert, 
      alert_mails, alert_phones, alert_sms_phones, 
      delete_flag, delete_time, version, 
      create_time, update_time, product_line, 
      dw_level, tag, mode_time, 
      task_exe_type, cascade, input_paths, 
      output_paths, remark)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{userCode,jdbcType=VARCHAR}, #{demandSide,jdbcType=VARCHAR}, #{projectCode,jdbcType=VARCHAR}, 
      #{taskType,jdbcType=VARCHAR}, #{taskPeriodType,jdbcType=TINYINT}, #{priority,jdbcType=TINYINT}, 
      #{appPath,jdbcType=VARCHAR}, #{commonAppPath,jdbcType=VARCHAR}, #{mainClazz,jdbcType=VARCHAR}, 
      #{processNo,jdbcType=INTEGER}, #{cpuNo,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, 
      #{elapsedTime,jdbcType=INTEGER}, #{inputTimeout,jdbcType=INTEGER}, #{outputTimeout,jdbcType=INTEGER}, 
      #{outputOffset,jdbcType=INTEGER}, #{beginTimeOffset,jdbcType=INTEGER}, #{checkType,jdbcType=TINYINT}, 
      #{mode,jdbcType=TINYINT}, #{yarnQueueName,jdbcType=VARCHAR}, #{hadoopAccount,jdbcType=VARCHAR}, 
      #{retryTimes,jdbcType=TINYINT}, #{onlyAlertOwner,jdbcType=TINYINT}, #{useDefaultAlert,jdbcType=TINYINT}, 
      #{usePhoneAlert,jdbcType=TINYINT}, #{useSmsAlert,jdbcType=TINYINT}, #{useMailAlert,jdbcType=TINYINT}, 
      #{alertMails,jdbcType=VARCHAR}, #{alertPhones,jdbcType=VARCHAR}, #{alertSmsPhones,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=TINYINT}, #{deleteTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{productLine,jdbcType=VARCHAR}, 
      #{dwLevel,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, #{modeTime,jdbcType=TIMESTAMP}, 
      #{taskExeType,jdbcType=VARCHAR}, #{cascade,jdbcType=BIT}, #{inputPaths,jdbcType=LONGVARCHAR}, 
      #{outputPaths,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    insert into capri_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="demandSide != null">
        demand_side,
      </if>
      <if test="projectCode != null">
        project_code,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskPeriodType != null">
        task_period_type,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="appPath != null">
        app_path,
      </if>
      <if test="commonAppPath != null">
        common_app_path,
      </if>
      <if test="mainClazz != null">
        main_clazz,
      </if>
      <if test="processNo != null">
        process_no,
      </if>
      <if test="cpuNo != null">
        cpu_no,
      </if>
      <if test="memory != null">
        memory,
      </if>
      <if test="elapsedTime != null">
        elapsed_time,
      </if>
      <if test="inputTimeout != null">
        input_timeout,
      </if>
      <if test="outputTimeout != null">
        output_timeout,
      </if>
      <if test="outputOffset != null">
        output_offset,
      </if>
      <if test="beginTimeOffset != null">
        begin_time_offset,
      </if>
      <if test="checkType != null">
        check_type,
      </if>
      <if test="mode != null">
        mode,
      </if>
      <if test="yarnQueueName != null">
        yarn_queue_name,
      </if>
      <if test="hadoopAccount != null">
        hadoop_account,
      </if>
      <if test="retryTimes != null">
        retry_times,
      </if>
      <if test="onlyAlertOwner != null">
        only_alert_owner,
      </if>
      <if test="useDefaultAlert != null">
        use_default_alert,
      </if>
      <if test="usePhoneAlert != null">
        use_phone_alert,
      </if>
      <if test="useSmsAlert != null">
        use_sms_alert,
      </if>
      <if test="useMailAlert != null">
        use_mail_alert,
      </if>
      <if test="alertMails != null">
        alert_mails,
      </if>
      <if test="alertPhones != null">
        alert_phones,
      </if>
      <if test="alertSmsPhones != null">
        alert_sms_phones,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="productLine != null">
        product_line,
      </if>
      <if test="dwLevel != null">
        dw_level,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="modeTime != null">
        mode_time,
      </if>
      <if test="taskExeType != null">
        task_exe_type,
      </if>
      <if test="cascade != null">
        cascade,
      </if>
      <if test="inputPaths != null">
        input_paths,
      </if>
      <if test="outputPaths != null">
        output_paths,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="demandSide != null">
        #{demandSide,jdbcType=VARCHAR},
      </if>
      <if test="projectCode != null">
        #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskPeriodType != null">
        #{taskPeriodType,jdbcType=TINYINT},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=TINYINT},
      </if>
      <if test="appPath != null">
        #{appPath,jdbcType=VARCHAR},
      </if>
      <if test="commonAppPath != null">
        #{commonAppPath,jdbcType=VARCHAR},
      </if>
      <if test="mainClazz != null">
        #{mainClazz,jdbcType=VARCHAR},
      </if>
      <if test="processNo != null">
        #{processNo,jdbcType=INTEGER},
      </if>
      <if test="cpuNo != null">
        #{cpuNo,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        #{memory,jdbcType=INTEGER},
      </if>
      <if test="elapsedTime != null">
        #{elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="inputTimeout != null">
        #{inputTimeout,jdbcType=INTEGER},
      </if>
      <if test="outputTimeout != null">
        #{outputTimeout,jdbcType=INTEGER},
      </if>
      <if test="outputOffset != null">
        #{outputOffset,jdbcType=INTEGER},
      </if>
      <if test="beginTimeOffset != null">
        #{beginTimeOffset,jdbcType=INTEGER},
      </if>
      <if test="checkType != null">
        #{checkType,jdbcType=TINYINT},
      </if>
      <if test="mode != null">
        #{mode,jdbcType=TINYINT},
      </if>
      <if test="yarnQueueName != null">
        #{yarnQueueName,jdbcType=VARCHAR},
      </if>
      <if test="hadoopAccount != null">
        #{hadoopAccount,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="onlyAlertOwner != null">
        #{onlyAlertOwner,jdbcType=TINYINT},
      </if>
      <if test="useDefaultAlert != null">
        #{useDefaultAlert,jdbcType=TINYINT},
      </if>
      <if test="usePhoneAlert != null">
        #{usePhoneAlert,jdbcType=TINYINT},
      </if>
      <if test="useSmsAlert != null">
        #{useSmsAlert,jdbcType=TINYINT},
      </if>
      <if test="useMailAlert != null">
        #{useMailAlert,jdbcType=TINYINT},
      </if>
      <if test="alertMails != null">
        #{alertMails,jdbcType=VARCHAR},
      </if>
      <if test="alertPhones != null">
        #{alertPhones,jdbcType=VARCHAR},
      </if>
      <if test="alertSmsPhones != null">
        #{alertSmsPhones,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productLine != null">
        #{productLine,jdbcType=VARCHAR},
      </if>
      <if test="dwLevel != null">
        #{dwLevel,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="modeTime != null">
        #{modeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExeType != null">
        #{taskExeType,jdbcType=VARCHAR},
      </if>
      <if test="cascade != null">
        #{cascade,jdbcType=BIT},
      </if>
      <if test="inputPaths != null">
        #{inputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputPaths != null">
        #{outputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.didi.datainfra.jms.domain.entity.TaskDOExample" resultType="java.lang.Long">
    select count(*) from capri_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update capri_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.demandSide != null">
        demand_side = #{record.demandSide,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCode != null">
        project_code = #{record.projectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPeriodType != null">
        task_period_type = #{record.taskPeriodType,jdbcType=TINYINT},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=TINYINT},
      </if>
      <if test="record.appPath != null">
        app_path = #{record.appPath,jdbcType=VARCHAR},
      </if>
      <if test="record.commonAppPath != null">
        common_app_path = #{record.commonAppPath,jdbcType=VARCHAR},
      </if>
      <if test="record.mainClazz != null">
        main_clazz = #{record.mainClazz,jdbcType=VARCHAR},
      </if>
      <if test="record.processNo != null">
        process_no = #{record.processNo,jdbcType=INTEGER},
      </if>
      <if test="record.cpuNo != null">
        cpu_no = #{record.cpuNo,jdbcType=INTEGER},
      </if>
      <if test="record.memory != null">
        memory = #{record.memory,jdbcType=INTEGER},
      </if>
      <if test="record.elapsedTime != null">
        elapsed_time = #{record.elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="record.inputTimeout != null">
        input_timeout = #{record.inputTimeout,jdbcType=INTEGER},
      </if>
      <if test="record.outputTimeout != null">
        output_timeout = #{record.outputTimeout,jdbcType=INTEGER},
      </if>
      <if test="record.outputOffset != null">
        output_offset = #{record.outputOffset,jdbcType=INTEGER},
      </if>
      <if test="record.beginTimeOffset != null">
        begin_time_offset = #{record.beginTimeOffset,jdbcType=INTEGER},
      </if>
      <if test="record.checkType != null">
        check_type = #{record.checkType,jdbcType=TINYINT},
      </if>
      <if test="record.mode != null">
        mode = #{record.mode,jdbcType=TINYINT},
      </if>
      <if test="record.yarnQueueName != null">
        yarn_queue_name = #{record.yarnQueueName,jdbcType=VARCHAR},
      </if>
      <if test="record.hadoopAccount != null">
        hadoop_account = #{record.hadoopAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.retryTimes != null">
        retry_times = #{record.retryTimes,jdbcType=TINYINT},
      </if>
      <if test="record.onlyAlertOwner != null">
        only_alert_owner = #{record.onlyAlertOwner,jdbcType=TINYINT},
      </if>
      <if test="record.useDefaultAlert != null">
        use_default_alert = #{record.useDefaultAlert,jdbcType=TINYINT},
      </if>
      <if test="record.usePhoneAlert != null">
        use_phone_alert = #{record.usePhoneAlert,jdbcType=TINYINT},
      </if>
      <if test="record.useSmsAlert != null">
        use_sms_alert = #{record.useSmsAlert,jdbcType=TINYINT},
      </if>
      <if test="record.useMailAlert != null">
        use_mail_alert = #{record.useMailAlert,jdbcType=TINYINT},
      </if>
      <if test="record.alertMails != null">
        alert_mails = #{record.alertMails,jdbcType=VARCHAR},
      </if>
      <if test="record.alertPhones != null">
        alert_phones = #{record.alertPhones,jdbcType=VARCHAR},
      </if>
      <if test="record.alertSmsPhones != null">
        alert_sms_phones = #{record.alertSmsPhones,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productLine != null">
        product_line = #{record.productLine,jdbcType=VARCHAR},
      </if>
      <if test="record.dwLevel != null">
        dw_level = #{record.dwLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.modeTime != null">
        mode_time = #{record.modeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskExeType != null">
        task_exe_type = #{record.taskExeType,jdbcType=VARCHAR},
      </if>
      <if test="record.cascade != null">
        cascade = #{record.cascade,jdbcType=BIT},
      </if>
      <if test="record.inputPaths != null">
        input_paths = #{record.inputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.outputPaths != null">
        output_paths = #{record.outputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update capri_task
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      demand_side = #{record.demandSide,jdbcType=VARCHAR},
      project_code = #{record.projectCode,jdbcType=VARCHAR},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      task_period_type = #{record.taskPeriodType,jdbcType=TINYINT},
      priority = #{record.priority,jdbcType=TINYINT},
      app_path = #{record.appPath,jdbcType=VARCHAR},
      common_app_path = #{record.commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{record.mainClazz,jdbcType=VARCHAR},
      process_no = #{record.processNo,jdbcType=INTEGER},
      cpu_no = #{record.cpuNo,jdbcType=INTEGER},
      memory = #{record.memory,jdbcType=INTEGER},
      elapsed_time = #{record.elapsedTime,jdbcType=INTEGER},
      input_timeout = #{record.inputTimeout,jdbcType=INTEGER},
      output_timeout = #{record.outputTimeout,jdbcType=INTEGER},
      output_offset = #{record.outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{record.beginTimeOffset,jdbcType=INTEGER},
      check_type = #{record.checkType,jdbcType=TINYINT},
      mode = #{record.mode,jdbcType=TINYINT},
      yarn_queue_name = #{record.yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{record.hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{record.retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{record.onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{record.useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{record.usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{record.useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{record.useMailAlert,jdbcType=TINYINT},
      alert_mails = #{record.alertMails,jdbcType=VARCHAR},
      alert_phones = #{record.alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{record.alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      product_line = #{record.productLine,jdbcType=VARCHAR},
      dw_level = #{record.dwLevel,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      mode_time = #{record.modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{record.taskExeType,jdbcType=VARCHAR},
      cascade = #{record.cascade,jdbcType=BIT},
      input_paths = #{record.inputPaths,jdbcType=LONGVARCHAR},
      output_paths = #{record.outputPaths,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update capri_task
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      demand_side = #{record.demandSide,jdbcType=VARCHAR},
      project_code = #{record.projectCode,jdbcType=VARCHAR},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      task_period_type = #{record.taskPeriodType,jdbcType=TINYINT},
      priority = #{record.priority,jdbcType=TINYINT},
      app_path = #{record.appPath,jdbcType=VARCHAR},
      common_app_path = #{record.commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{record.mainClazz,jdbcType=VARCHAR},
      process_no = #{record.processNo,jdbcType=INTEGER},
      cpu_no = #{record.cpuNo,jdbcType=INTEGER},
      memory = #{record.memory,jdbcType=INTEGER},
      elapsed_time = #{record.elapsedTime,jdbcType=INTEGER},
      input_timeout = #{record.inputTimeout,jdbcType=INTEGER},
      output_timeout = #{record.outputTimeout,jdbcType=INTEGER},
      output_offset = #{record.outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{record.beginTimeOffset,jdbcType=INTEGER},
      check_type = #{record.checkType,jdbcType=TINYINT},
      mode = #{record.mode,jdbcType=TINYINT},
      yarn_queue_name = #{record.yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{record.hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{record.retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{record.onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{record.useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{record.usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{record.useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{record.useMailAlert,jdbcType=TINYINT},
      alert_mails = #{record.alertMails,jdbcType=VARCHAR},
      alert_phones = #{record.alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{record.alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      product_line = #{record.productLine,jdbcType=VARCHAR},
      dw_level = #{record.dwLevel,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      mode_time = #{record.modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{record.taskExeType,jdbcType=VARCHAR},
      cascade = #{record.cascade,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    update capri_task
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="demandSide != null">
        demand_side = #{demandSide,jdbcType=VARCHAR},
      </if>
      <if test="projectCode != null">
        project_code = #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskPeriodType != null">
        task_period_type = #{taskPeriodType,jdbcType=TINYINT},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=TINYINT},
      </if>
      <if test="appPath != null">
        app_path = #{appPath,jdbcType=VARCHAR},
      </if>
      <if test="commonAppPath != null">
        common_app_path = #{commonAppPath,jdbcType=VARCHAR},
      </if>
      <if test="mainClazz != null">
        main_clazz = #{mainClazz,jdbcType=VARCHAR},
      </if>
      <if test="processNo != null">
        process_no = #{processNo,jdbcType=INTEGER},
      </if>
      <if test="cpuNo != null">
        cpu_no = #{cpuNo,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        memory = #{memory,jdbcType=INTEGER},
      </if>
      <if test="elapsedTime != null">
        elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      </if>
      <if test="inputTimeout != null">
        input_timeout = #{inputTimeout,jdbcType=INTEGER},
      </if>
      <if test="outputTimeout != null">
        output_timeout = #{outputTimeout,jdbcType=INTEGER},
      </if>
      <if test="outputOffset != null">
        output_offset = #{outputOffset,jdbcType=INTEGER},
      </if>
      <if test="beginTimeOffset != null">
        begin_time_offset = #{beginTimeOffset,jdbcType=INTEGER},
      </if>
      <if test="checkType != null">
        check_type = #{checkType,jdbcType=TINYINT},
      </if>
      <if test="mode != null">
        mode = #{mode,jdbcType=TINYINT},
      </if>
      <if test="yarnQueueName != null">
        yarn_queue_name = #{yarnQueueName,jdbcType=VARCHAR},
      </if>
      <if test="hadoopAccount != null">
        hadoop_account = #{hadoopAccount,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        retry_times = #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="onlyAlertOwner != null">
        only_alert_owner = #{onlyAlertOwner,jdbcType=TINYINT},
      </if>
      <if test="useDefaultAlert != null">
        use_default_alert = #{useDefaultAlert,jdbcType=TINYINT},
      </if>
      <if test="usePhoneAlert != null">
        use_phone_alert = #{usePhoneAlert,jdbcType=TINYINT},
      </if>
      <if test="useSmsAlert != null">
        use_sms_alert = #{useSmsAlert,jdbcType=TINYINT},
      </if>
      <if test="useMailAlert != null">
        use_mail_alert = #{useMailAlert,jdbcType=TINYINT},
      </if>
      <if test="alertMails != null">
        alert_mails = #{alertMails,jdbcType=VARCHAR},
      </if>
      <if test="alertPhones != null">
        alert_phones = #{alertPhones,jdbcType=VARCHAR},
      </if>
      <if test="alertSmsPhones != null">
        alert_sms_phones = #{alertSmsPhones,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productLine != null">
        product_line = #{productLine,jdbcType=VARCHAR},
      </if>
      <if test="dwLevel != null">
        dw_level = #{dwLevel,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="modeTime != null">
        mode_time = #{modeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskExeType != null">
        task_exe_type = #{taskExeType,jdbcType=VARCHAR},
      </if>
      <if test="cascade != null">
        cascade = #{cascade,jdbcType=BIT},
      </if>
      <if test="inputPaths != null">
        input_paths = #{inputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="outputPaths != null">
        output_paths = #{outputPaths,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    update capri_task
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      demand_side = #{demandSide,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=VARCHAR},
      task_period_type = #{taskPeriodType,jdbcType=TINYINT},
      priority = #{priority,jdbcType=TINYINT},
      app_path = #{appPath,jdbcType=VARCHAR},
      common_app_path = #{commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{mainClazz,jdbcType=VARCHAR},
      process_no = #{processNo,jdbcType=INTEGER},
      cpu_no = #{cpuNo,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      input_timeout = #{inputTimeout,jdbcType=INTEGER},
      output_timeout = #{outputTimeout,jdbcType=INTEGER},
      output_offset = #{outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{beginTimeOffset,jdbcType=INTEGER},
      check_type = #{checkType,jdbcType=TINYINT},
      mode = #{mode,jdbcType=TINYINT},
      yarn_queue_name = #{yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{useMailAlert,jdbcType=TINYINT},
      alert_mails = #{alertMails,jdbcType=VARCHAR},
      alert_phones = #{alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      product_line = #{productLine,jdbcType=VARCHAR},
      dw_level = #{dwLevel,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      mode_time = #{modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{taskExeType,jdbcType=VARCHAR},
      cascade = #{cascade,jdbcType=BIT},
      input_paths = #{inputPaths,jdbcType=LONGVARCHAR},
      output_paths = #{outputPaths,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.didi.datainfra.jms.domain.entity.TaskDO">
    update capri_task
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      demand_side = #{demandSide,jdbcType=VARCHAR},
      project_code = #{projectCode,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=VARCHAR},
      task_period_type = #{taskPeriodType,jdbcType=TINYINT},
      priority = #{priority,jdbcType=TINYINT},
      app_path = #{appPath,jdbcType=VARCHAR},
      common_app_path = #{commonAppPath,jdbcType=VARCHAR},
      main_clazz = #{mainClazz,jdbcType=VARCHAR},
      process_no = #{processNo,jdbcType=INTEGER},
      cpu_no = #{cpuNo,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      elapsed_time = #{elapsedTime,jdbcType=INTEGER},
      input_timeout = #{inputTimeout,jdbcType=INTEGER},
      output_timeout = #{outputTimeout,jdbcType=INTEGER},
      output_offset = #{outputOffset,jdbcType=INTEGER},
      begin_time_offset = #{beginTimeOffset,jdbcType=INTEGER},
      check_type = #{checkType,jdbcType=TINYINT},
      mode = #{mode,jdbcType=TINYINT},
      yarn_queue_name = #{yarnQueueName,jdbcType=VARCHAR},
      hadoop_account = #{hadoopAccount,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      only_alert_owner = #{onlyAlertOwner,jdbcType=TINYINT},
      use_default_alert = #{useDefaultAlert,jdbcType=TINYINT},
      use_phone_alert = #{usePhoneAlert,jdbcType=TINYINT},
      use_sms_alert = #{useSmsAlert,jdbcType=TINYINT},
      use_mail_alert = #{useMailAlert,jdbcType=TINYINT},
      alert_mails = #{alertMails,jdbcType=VARCHAR},
      alert_phones = #{alertPhones,jdbcType=VARCHAR},
      alert_sms_phones = #{alertSmsPhones,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      product_line = #{productLine,jdbcType=VARCHAR},
      dw_level = #{dwLevel,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      mode_time = #{modeTime,jdbcType=TIMESTAMP},
      task_exe_type = #{taskExeType,jdbcType=VARCHAR},
      cascade = #{cascade,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>